/* Generated By:JavaCC: Do not edit this line. compiConstants.java */
package Lexico;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface compiConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int OPARITMETICO = 6;
  /** RegularExpression Id. */
  int OPRELACIONAL = 7;
  /** RegularExpression Id. */
  int OPLOGICO = 8;
  /** RegularExpression Id. */
  int ASIGNACION = 9;
  /** RegularExpression Id. */
  int INCREMENTO = 10;
  /** RegularExpression Id. */
  int DECREMENTO = 11;
  /** RegularExpression Id. */
  int COMPBITS = 12;
  /** RegularExpression Id. */
  int OPTERNARIO = 13;
  /** RegularExpression Id. */
  int APUNTADOR = 14;
  /** RegularExpression Id. */
  int OPFUSIONNULA = 15;
  /** RegularExpression Id. */
  int LAMBDA = 16;
  /** RegularExpression Id. */
  int PARIZQ = 17;
  /** RegularExpression Id. */
  int PARDER = 18;
  /** RegularExpression Id. */
  int LLAVEIZQ = 19;
  /** RegularExpression Id. */
  int LLAVEDER = 20;
  /** RegularExpression Id. */
  int CORIZQ = 21;
  /** RegularExpression Id. */
  int CORDER = 22;
  /** RegularExpression Id. */
  int PUNTOS = 23;
  /** RegularExpression Id. */
  int FINLINEA = 24;
  /** RegularExpression Id. */
  int COMILLAS = 25;
  /** RegularExpression Id. */
  int COMENTARIO = 26;
  /** RegularExpression Id. */
  int IF = 27;
  /** RegularExpression Id. */
  int SINO = 28;
  /** RegularExpression Id. */
  int ELSIF = 29;
  /** RegularExpression Id. */
  int SWITCH = 30;
  /** RegularExpression Id. */
  int CASE = 31;
  /** RegularExpression Id. */
  int FINCASE = 32;
  /** RegularExpression Id. */
  int CICLO = 33;
  /** RegularExpression Id. */
  int NUMERO = 34;
  /** RegularExpression Id. */
  int TIPODATO = 35;
  /** RegularExpression Id. */
  int NULO = 36;
  /** RegularExpression Id. */
  int VALOR_BOOLEANO = 37;
  /** RegularExpression Id. */
  int FUNCION = 38;
  /** RegularExpression Id. */
  int CLASE = 39;
  /** RegularExpression Id. */
  int VALOR_OBJETO = 40;
  /** RegularExpression Id. */
  int TIPO_INTERFAZ = 41;
  /** RegularExpression Id. */
  int TIPO_DELEGADO = 42;
  /** RegularExpression Id. */
  int GLOBAL = 43;
  /** RegularExpression Id. */
  int IO = 44;
  /** RegularExpression Id. */
  int RETORNO = 45;
  /** RegularExpression Id. */
  int THEN = 46;
  /** RegularExpression Id. */
  int ITERACION = 47;
  /** RegularExpression Id. */
  int PRUEBA = 48;
  /** RegularExpression Id. */
  int ATRAPADOR = 49;
  /** RegularExpression Id. */
  int COMPARADOR = 50;
  /** RegularExpression Id. */
  int ABRIR_ARCHIVO = 51;
  /** RegularExpression Id. */
  int LEER_ARCHIVO = 52;
  /** RegularExpression Id. */
  int LEER_LINEA = 53;
  /** RegularExpression Id. */
  int ESCRIBIR = 54;
  /** RegularExpression Id. */
  int ESCRIBIR_LINEA = 55;
  /** RegularExpression Id. */
  int IMPRIMIR = 56;
  /** RegularExpression Id. */
  int EJECUCION = 57;
  /** RegularExpression Id. */
  int ERROR_EXCEPCION = 58;
  /** RegularExpression Id. */
  int ERROR_BLOQUEO = 59;
  /** RegularExpression Id. */
  int ERROR_FINALIZACION = 60;
  /** RegularExpression Id. */
  int SELECTOR = 61;
  /** RegularExpression Id. */
  int METODO_DESDE = 62;
  /** RegularExpression Id. */
  int METODO_TIPO = 63;
  /** RegularExpression Id. */
  int VALOR_DE_OBJETO = 64;
  /** RegularExpression Id. */
  int NUEVO = 65;
  /** RegularExpression Id. */
  int BIBLIOTECA = 66;
  /** RegularExpression Id. */
  int IMPORTAR_BIBLIOTECA = 67;
  /** RegularExpression Id. */
  int ABSTRACCION = 68;
  /** RegularExpression Id. */
  int GET = 69;
  /** RegularExpression Id. */
  int SET = 70;
  /** RegularExpression Id. */
  int THROW = 71;
  /** RegularExpression Id. */
  int PUNTERO = 72;
  /** RegularExpression Id. */
  int MOD_ABSTRAC = 73;
  /** RegularExpression Id. */
  int SUPER = 74;
  /** RegularExpression Id. */
  int PARAMETROS = 75;
  /** RegularExpression Id. */
  int TIPO_METODO = 76;
  /** RegularExpression Id. */
  int ESTATICO = 77;
  /** RegularExpression Id. */
  int VALOR = 78;
  /** RegularExpression Id. */
  int INPUT = 79;
  /** RegularExpression Id. */
  int EVENTO = 80;
  /** RegularExpression Id. */
  int REFERENCIA = 81;
  /** RegularExpression Id. */
  int COMPROBAR = 82;
  /** RegularExpression Id. */
  int DESCOMPROBAR = 83;
  /** RegularExpression Id. */
  int SINCRONIZAR = 84;
  /** RegularExpression Id. */
  int CORRER = 85;
  /** RegularExpression Id. */
  int IGNORAR = 86;
  /** RegularExpression Id. */
  int START = 87;
  /** RegularExpression Id. */
  int REMOVE = 88;
  /** RegularExpression Id. */
  int CLEAR = 89;
  /** RegularExpression Id. */
  int REVERSE = 90;
  /** RegularExpression Id. */
  int COPIAR = 91;
  /** RegularExpression Id. */
  int MAXIMO = 92;
  /** RegularExpression Id. */
  int MINIMO = 93;
  /** RegularExpression Id. */
  int SUMAR = 94;
  /** RegularExpression Id. */
  int DETENER = 95;
  /** RegularExpression Id. */
  int PAUSAR = 96;
  /** RegularExpression Id. */
  int SUSPENDER = 97;
  /** RegularExpression Id. */
  int ADJUNTAR = 98;
  /** RegularExpression Id. */
  int EXTENDER = 99;
  /** RegularExpression Id. */
  int INSERTAR = 100;
  /** RegularExpression Id. */
  int MODMATH = 101;
  /** RegularExpression Id. */
  int HEIGHT = 102;
  /** RegularExpression Id. */
  int WIDTH = 103;
  /** RegularExpression Id. */
  int LEFT = 104;
  /** RegularExpression Id. */
  int RIGHT = 105;
  /** RegularExpression Id. */
  int TOP = 106;
  /** RegularExpression Id. */
  int INDICE = 107;
  /** RegularExpression Id. */
  int METODO = 108;
  /** RegularExpression Id. */
  int TAG = 109;
  /** RegularExpression Id. */
  int BOTTOM = 110;
  /** RegularExpression Id. */
  int CONTAR = 111;
  /** RegularExpression Id. */
  int ORDENAR = 112;
  /** RegularExpression Id. */
  int TIEMPO = 113;
  /** RegularExpression Id. */
  int ALEATORIO = 114;
  /** RegularExpression Id. */
  int CLOSE = 115;
  /** RegularExpression Id. */
  int BUSCAR = 116;
  /** RegularExpression Id. */
  int RENOMBRAR = 117;
  /** RegularExpression Id. */
  int FUNCMAT = 118;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 119;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\t\"",
    "<OPARITMETICO>",
    "<OPRELACIONAL>",
    "<OPLOGICO>",
    "<ASIGNACION>",
    "\"++\"",
    "\"--\"",
    "\"~\"",
    "\"?:\"",
    "<APUNTADOR>",
    "\"??\"",
    "\"lambda\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "<PUNTOS>",
    "\";\"",
    "<COMILLAS>",
    "\"#\"",
    "\"if\"",
    "\"else\"",
    "\"elsif\"",
    "\"switch\"",
    "\"case\"",
    "\"break\"",
    "<CICLO>",
    "<NUMERO>",
    "<TIPODATO>",
    "\"null\"",
    "<VALOR_BOOLEANO>",
    "\"func\"",
    "\"class\"",
    "\"object\"",
    "\"interface\"",
    "\"del\"",
    "\"global\"",
    "<IO>",
    "\"return\"",
    "\"then\"",
    "\"continue\"",
    "\"try\"",
    "\"catch\"",
    "\"like\"",
    "\"open\"",
    "\"readfile\"",
    "\"readln\"",
    "\"write\"",
    "\"writeln\"",
    "<IMPRIMIR>",
    "\"exec\"",
    "\"excep\"",
    "\"raise\"",
    "\"finally\"",
    "\"select\"",
    "\"from\"",
    "\"type\"",
    "\"default\"",
    "\"new\"",
    "\"packg\"",
    "\"import\"",
    "\"abstract\"",
    "\"get\"",
    "\"set\"",
    "\"throw\"",
    "\"this\"",
    "\"override\"",
    "\"super\"",
    "\"params\"",
    "<TIPO_METODO>",
    "\"static\"",
    "\"value\"",
    "\"input\"",
    "\"event\"",
    "\"ref\"",
    "\"checked\"",
    "\"unchecked\"",
    "\"sync\"",
    "\"run\"",
    "\"pass\"",
    "\"Start\"",
    "\"Remove\"",
    "\"Clear\"",
    "\"Reverse\"",
    "\"Copy\"",
    "\"Max\"",
    "\"Min\"",
    "\"Sum\"",
    "\"Stop\"",
    "\"Pause\"",
    "\"Sleep\"",
    "\"append\"",
    "\"extend\"",
    "\"insert\"",
    "\"Math\"",
    "\"Height\"",
    "\"Width\"",
    "\"Left\"",
    "\"Right\"",
    "\"Top\"",
    "\"Index\"",
    "\"void\"",
    "\"Tag\"",
    "\"Bottom\"",
    "\"count\"",
    "\"sort\"",
    "\"time\"",
    "\"random\"",
    "\"close\"",
    "\"seek\"",
    "\"rename\"",
    "<FUNCMAT>",
    "<IDENTIFICADOR>",
    "\"Main\"",
    "\"=\"",
    "\",\"",
    "\"while\"",
    "\"for\"",
  };

}
